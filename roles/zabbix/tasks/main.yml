---
- name: Check if zabbix repo file exists
  stat:
    path: /etc/apt/sources.list.d/zabbix.list
  register: apt_zabbix_repo

- name: Download zabbix repository install file
  get_url:
    url: "{{ repo_download_url }}"
    dest: /tmp
    force: true
  when: not apt_zabbix_repo.stat.exists

- name: Install Zabbix repository
  apt:
    deb: "{{ repo_file.dest }}"
  when: not apt_zabbix_repo.stat.exists

- name: Update apt cache if needed.
  apt:
    update_cache: yes
  when: not apt_zabbix_repo.stat.exists

- name: Install required packages for Zabbix server
  apt:
    name: "{{ item }}"
    state: present
  with_items: 
  - postgresql
  - zabbix-server-pgsql
  - zabbix-frontend-php
  - php8.1-pgsql
  - zabbix-nginx-conf
  - zabbix-sql-scripts
  - zabbix-agent
  - traceroute
  - nmap
  - snmp

- name: install acl for work with setfacl (need for postgresql Ansible module)
  apt:
    name: acl
    state: present

- name: Create zabbix user in postgresql
  community.postgresql.postgresql_user:
    name: "{{ zabbix_db_user_name }}"
    password: "{{ lookup('env', 'PG_ZABBIX_USER_PWD') }}"
    state: present
  become_user: postgres

- name: Create zabbix database in postgresql
  community.postgresql.postgresql_db:
    name: "{{ zabbix_db_name }}"
    owner: zabbix
  become_user: postgres

- name: Restore zabbix database schema
  shell: sudo zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix

- name: Copy config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: true
  with_items:
  - { src: zabbix_server.conf.j2, dest: /etc/zabbix/zabbix_server.conf }  
  - { src: nginx.conf.j2, dest: /etc/zabbix/nginx.conf }  
  notify: Restart Zabbix

- name: Create directory for ssl certs
  file:
    path: /etc/zabbix/ssl
    state: directory
  when: enable_ssl

- name: Copy certificate and key
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: true
  with_items:
    - { src: '/etc/ansible/config/ssl/itproblog.ru.crt', dest: "{{ ssl_certificate_path }}" }
    - { src: '/etc/ansible/config/ssl/itproblog.ru.key', dest: "{{ ssl_certificate_key_path }}" }
  when: enable_ssl == true

- name: Enable services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
  - zabbix-server
  - zabbix-agent
  - nginx
  - php8.1-fpm

- name: config zabbix user permission for running nmap and other tools on zabbix server
  lineinfile:
    regex: ^#?zabbix ALL=\(ALL\) NOPASSWD:\/usr\/bin\/nmap$
    line: zabbix ALL=(ALL) NOPASSWD:/usr/bin/nmap
    path: /etc/sudoers